
# < Day1. AI>
# [ AI 역사 ]
# 1950 ~ 1980 1세대   제어 프로그램
# 1990        2세대   경로 및 DB 탐색
# 2000        3세대   머신러닝
# 2010        4세대   딥러닝
# AI >Machine Learning > Deep Learning
# - 꼭 딥러닝이 더 좋은 것만은 아니다

# [ 퍼셉트론 ]
# - 여러 알고리즘 중 하나
# - 사람처럼 사고하는 구성을 짜는 것

# ===================== [ 머신러닝 ] ===========================
# : 경험적 데이터 기반 학습 및 예측 수행으로 스스로 성능 향상
# - 데이터 => 규칙/패턴 => 수식
#             알고리즘     모델

# [ 머신 러닝 지도 방법 ]
# https://scikit-learn.org/stable/user_guide.html
# 1. 지도 학습   : 문제와 결과 데이터를 입력 -> 예측 결과 제공
#                  회귀, 분류, 랭킹
# 2. 강화 학습   : 문제만 제공, 결과 평가 및 보상
# 3. 비지도 학습 : 명시된 결과 없이 데이터 속 패턴을 학습
#                  군집화, 연관, 차원 축소에 이용

# [ 머신러닝 기법 및 모델 ]
# 분류
# 회귀
# 의사결정나무
# 인공신경망
# 유전자 프로그래밍
# 군집화            : 비지도 학습
# 몬테카를로 방법   : 강화학습 기본 개념

# [ 딥러닝 ]
# : 신경망 어쩌구

# [ 딥러닝 기법 및 모델 ]
# 1. 퍼셉트론
# 2. 인공신경망 ANN : 층이 구성
# 3. 심층신경망 DNN : 다수의 층 깊이로 구성

# [ 딥러닝 필수 라이브러리, 프레임워크 ]
# - 라이브러리 : 오늘 설치한 애들
# -              Numpy, Scipy, Matplotlib, Pandas, Tensorflow, Keras
# - 프레임워크 : Scikit-learn 등
# - 머신 러닝  : scikit-learn
# 기타
# 1) CUDA : GPU 플랫폼이자 API, 딥러닝에 사용 -> 우리가 사용
# 2) OpenCL : AMD. 내 PC는 AMD인데..?

# ==================== [ 머신러닝 프로세스 ] ========================
# 1. 목표설정
# 2. 데이터 준비 : 데이터 수집, 추출, 가공 : 대부분의 시간 소요
# 3. 데이터 학습 : 지도, 비지도 선정       : 반복반복반복
# 4. 모델 평가
# 5. 활용 : web, app

# - 데이터 준비 과정 외엔 정해진 코드를 따라 쓰면 됨

# [ 머신 러닝 학습 준비 ]
# - 데이터셋 : 정확한 규칙 및 패턴을 찾기 위해 필요한 데이터 집합
#              학습용 : 규칙 찾기
#              검증용 : 중간 점검
#              테스트용 : 검사하기
# - 분류 :    데이터                 라벨
#          Feature, Field        class, target
#          사진 1, 2, 3...       고양이
#        : 데이터와 타겟을 구분하는 게 데이터 준비 과정

# [ 머신러닝 연습용 데이터 사이트 ]
# https://archive.ics.uci.edu/
# - iris도 있음

# ====================== [ Scikit-learn 소개 ] ==========================
#  예제 데이터     .datasets           연습용 데이터셋
#  피처 처리       .preprocessing      전처리 관련 기법
#                     등등
#  차원 축소       .decomposition      데이터 차원 축소: 많은 피처를 하나로 묶어 빠르게 처리
#  알고리즘        .ensemble           앙상블 알고리즘 계열 : 제일 많이 씀
#   (중요)         .linear 어쩌구      선형 회귀
#
# [ Scikit-learn cheat-sheet ]
# - 논리다이어그램
#   1) 50개 이상
#   2) 카테고리
#   3) 라벨 유무
#   4) 데이터 형식 등등
#  -> classification, regression, clustering, outlier detection 네 가지로 나눔

# [ KNN : K-Nearest-Neighbor]

